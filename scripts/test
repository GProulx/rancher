#!/bin/bash
set -e

CWD=$(pwd -P)
cleanup()
{
    EXIT=$?
    set +e
    echo Stopping rancher server
    kill $RANCHER_PID
    wait $RANCHER_PID
    echo Stopping klipper
    kill $KLIPPER_PID
    wait $KLIPPER_PID
    return $EXIT
}

#PACKAGES=". $(find -name '*.go' | xargs -I{} dirname {} |  cut -f2 -d/ | sort -u | grep -Ev '(^\.$|.git|.trash-cache|vendor|bin)' | sed -e 's!^!./!' -e 's!$!/...!')"
#
#[ "${ARCH}" == "amd64" ] && RACE=-race
#go test ${RACE} -cover -tags=test ${PACKAGES}

if [ ${ARCH} == arm64 ]; then
    export ETCD_UNSUPPORTED_ARCH=arm64
fi

exec k3s server --write-kubeconfig "/root/.kube/config" &
KLIPPER_PID=$!

$(dirname $0)/run &
RANCHER_PID=$!

echo 'Waiting for Rancher server'

while ! curl -sf http://localhost:8080/ping; do
    sleep 2
done

echo 'Waiting for klipper'

while ! [ $(k3s kubectl --kubeconfig /root/.kube/config get --raw /healthz) == ok ]; do
    sleep 2
done

echo Running tests

cd $(dirname $0)/../tests
tox -- -m "not nonparallel" -n $(nproc)
tox -- -m nonparallel
